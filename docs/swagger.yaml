basePath: /api/v1
definitions:
  model.AccelerationSensor:
    properties:
      measurements:
        items: {}
        type: array
      type:
        type: string
    type: object
  model.Gateway:
    description: tags - all the tags, known to the gateway config - GatewayConfig
      that belongs to this Gateway network_segment - subnet the Gateway is in last_contact
      - last time the api heard back from the Gateway online - bool that determines
      if the Gateway is currently online ip_address - current IPv4 of the Gateway
      id - unique identifier
    properties:
      config:
        $ref: '#/definitions/model.GatewayConfig'
      id:
        type: string
      ip_address:
        type: string
      last_contact:
        type: string
      network_segment:
        type: integer
      online:
        type: boolean
      tags:
        items:
          $ref: '#/definitions/model.Tag'
        type: array
    type: object
  model.GatewayConfig:
    description: version - version of the gateway's firmware poll_interval - how often
      the tags will be polled via bluetooth max_allowed_clients - how many tags will
      be accepted api_timeout - how long it takes for the gateway to restart when
      the api-server is unavailable
    properties:
      api_timeout:
        type: number
      max_allowed_clients:
        type: integer
      poll_interval:
        type: integer
      version:
        type: string
    type: object
  model.Tag:
    description: sensors - all the sensors, mounted on this tag (list) address - unique
      MAC-address of the tag (bluetooth MAC) name - name of the tag that derives from
      the MAC-address last_contact - last time the Gateway heard back from the Tag
      online - bool that determines if the Tag is currently online config - TagConfig
      that belongs to this Tag
    properties:
      address:
        type: string
      config:
        $ref: '#/definitions/model.TagConfig'
      last_contact:
        type: string
      name:
        type: string
      online:
        type: boolean
      sensors:
        items: {}
        type: array
    type: object
  model.TagConfig:
    description: samplerate - samplerate of the tag scan_interval - interval the sensors
      of the tag will be polled (ms) resolution - bit depth resolution of the sensors
      scale - scaling factor for values from the sensors (for compression) dsp_function
      - dsp function for signal evaluation (enum) dsp_parameter - dsp configuration
      parameter (enum) mode - current measurement mode (enum) divider - divider for
      the samplerate
    properties:
      divider:
        type: integer
      dsp_function:
        type: integer
      dsp_parameter:
        type: integer
      mode:
        type: integer
      resolution:
        type: integer
      samplerate:
        type: integer
      scale:
        type: integer
      scan_interval:
        type: number
    type: object
info:
  contact: {}
paths:
  /acc-data/get/{tag}:
    get:
      consumes:
      - application/json
      description: gets the latest data of the specified tag - get your tags via "list"
        first
      parameters:
      - description: the tags address
        example: '"12:34:56:78:90:12"'
        in: path
        name: tag
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.AccelerationSensor'
            type: array
      summary: gets latest data of the specified tag
      tags:
      - acc-data
  /acc-data/get/{tag}/{page}:
    get:
      consumes:
      - application/json
      description: gets data of the specified tag - get your tags via "list" first
      parameters:
      - description: the tags address
        example: '"12:34:56:78:90:12"'
        in: path
        name: tag
        required: true
        type: string
      - description: the page of measurements you would like to get
        in: path
        name: page
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: gets acc data of the specified tag
      tags:
      - acc-data
  /config/get/{gatewayid}:
    get:
      consumes:
      - application/json
      description: get config of a specific gateway to be able to decide on version
        updates etc. To find the gateways id use /structure/gateway/list
      parameters:
      - description: the gateways id
        in: path
        name: gatewayid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.GatewayConfig'
            type: array
      summary: lists available configs
      tags:
      - config
  /config/get/{gatewayid}/{tagaddress}:
    get:
      consumes:
      - application/json
      description: get config of a specific gateway to be able to decide on version
        updates etc. To find the gateways id use /structure/gateway/list, to get the
        tags address use /structure/tag/list/{gatewayid}
      parameters:
      - description: the gateways id
        in: path
        name: gatewayid
        required: true
        type: string
      - description: the tags id
        in: path
        name: tagaddress
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.GatewayConfig'
            type: array
      summary: lists available configs
      tags:
      - config
  /ping:
    get:
      consumes:
      - application/json
      description: do ping
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: ping example
      tags:
      - ping
  /structure/gateway/list:
    get:
      consumes:
      - application/json
      description: lists gateways
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Gateway'
            type: array
      summary: lists available gateways
      tags:
      - structure
  /structure/tag/list/{gatewayid}:
    get:
      consumes:
      - application/json
      description: lists tags
      parameters:
      - description: id of the gateway
        in: path
        name: gatewayid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Gateway'
            type: array
      summary: lists available tags - get the gateway_id from structure/gateway/list
      tags:
      - structure
swagger: "2.0"
